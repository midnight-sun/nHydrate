<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7N/46t4n9tJPjQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>